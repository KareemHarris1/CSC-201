UNCOLLECT_INT[i]  <-  as.numeric(trimws(substr(line,63,73)))
EXT_INT[i]   <- as.numeric(trimws(substr(line,77,89)))
YLD_DIFF[i]    <- as.numeric(trimws(substr(line,90,100)))
SRV_RATE[i]  <-  as.numeric(trimws(substr(line,102,150)))
line <- doc[(i+3)]
DEF_PRIN[i] <- as.numeric(trimws(substr(line,46,57)))
}
}
df <- data.frame(
ACCOUNT_NBR   ,
NEW_INV_BLK    ,
OLD_INV_BLK    ,
PRINCIPAL        ,
INTEREST     ,
SERVICE_FEE  ,
NOTE_RATE  ,
REMOVAL_AMT ,
NAMEKEY ,
INV_ACCT_NBR ,
PERC_TRANSFER  ,
PI_PAYMENT      ,
ESCROW_BAL     ,
BUYDOWN_BAL   ,
INV_RATE  ,
G_FEE_RT ,
MERS_NBR    ,
TELLER_NBR   ,
PAID_TO_DATE    ,
UNAPPLIED_BAL   ,
UNCOLLECT_INT  ,
EXT_INT   ,
YLD_DIFF    ,
SRV_RATE  ,
DEF_PRIN
)
df <- df[!is.na(df$ACCOUNT_NBR),]
View(df)
source('//fs03/docs/Servicing/Parsing Scripts/0061003/0061003_Parse.R', echo=TRUE)
source('//fs03/docs/Servicing/Parsing Scripts/0061003/0061003_Parse.R', echo=TRUE)
View(df)
source('//fs03/docs/Servicing/Operations_Support/Drew/Custom Functions/loadAll/loadAll.R')
nchar('0061003STNDZDL0128A')
dat <- substr(filename,20,28)
dat <- substr(filename,20,27)
setwd('\\\\fs03\\docs\\Servicing/FISERV REPORTS/anyq/reports')
name <- list.files()[grepl('0061003',list.files())]
name
as.Date(substr(name[1:length(name)],20,27))
name <- name[-length(name)]
dats <- as.Date(substr(name[1:length(name)],20,27))
name
dats <- as.Date(substr(name[1:length(name)],20,27),'%Y%m%d')
name[order(dats)]
name[-order(dats)]
name[desc(order(dats))]
library(dplyr)
name[desc(order(dats))]
name[arrange(desc(dats))]
name[rev(order(dats))]
for(n in 1:length(name)){
filename <- name[n]
dat <- substr(filename,20,27)
doc <- readLines(filename)
if(T %in% grepl('NO ACTIVITY REPORTED',doc[1:length(doc)])){
next
} else {
ACCOUNT_NBR   <- rep(NA,50000)
NEW_INV_BLK    <- rep(NA,50000)
OLD_INV_BLK    <- rep(NA,50000)
PRINCIPAL        <- rep(NA,50000)
INTEREST     <- rep(NA,50000)
SERVICE_FEE  <- rep(NA,50000)
NOTE_RATE  <- rep(NA,50000)
REMOVAL_AMT <- rep(NA,50000)
NAMEKEY <- rep(NA,50000)
INV_ACCT_NBR <-      rep(NA,50000)
PERC_TRANSFER  <- rep(NA,50000)
PI_PAYMENT      <- rep(NA,50000)
ESCROW_BAL     <- rep(NA,50000)
BUYDOWN_BAL   <- rep(NA,50000)
INV_RATE  <- rep(NA,50000)
G_FEE_RT <- rep(NA,50000)
MERS_NBR    <-        rep(NA,50000)
TELLER_NBR   <- rep(NA,50000)
PAID_TO_DATE    <-   rep(NA,50000)
UNAPPLIED_BAL   <- rep(NA,50000)
UNCOLLECT_INT  <-  rep(NA,50000)
EXT_INT   <- rep(NA,50000)
YLD_DIFF    <- rep(NA,50000)
SRV_RATE  <-  rep(NA,50000)
DEF_PRIN <- rep(NA,50000)
for (i in 2:length(doc)){
if(!is.na(as.numeric(substr(doc[i],1,10))) & substr(doc[(i-1)],1,10)==''){
line <- doc[i]
ACCOUNT_NBR[i]   <- as.character(as.numeric(substr(line,1,10)))
NEW_INV_BLK[i]    <- trimws(substr(line,20,30))
OLD_INV_BLK[i]    <- trimws(substr(line,35,45))
PRINCIPAL[i]        <- as.numeric(trimws(substr(line,46,57)))
INTEREST[i]     <- as.numeric(trimws(substr(line,63,73)))
SERVICE_FEE[i]  <- as.numeric(trimws(substr(line,77,89)))
NOTE_RATE[i]  <- as.numeric(trimws(substr(line,90,100)))
REMOVAL_AMT[i] <- as.numeric(trimws(substr(line,102,114)))
line <- doc[(i+1)]
NAMEKEY[i] <- trimws(substr(line,1,16))
INV_ACCT_NBR[i] <- as.character(as.numeric(substr(line,17,29)))
PERC_TRANSFER[i]  <- as.numeric(trimws(substr(line,36,44)))
PI_PAYMENT[i]      <- as.numeric(trimws(substr(line,46,57)))
ESCROW_BAL[i]     <- as.numeric(trimws(substr(line,63,73)))
BUYDOWN_BAL[i]   <- as.numeric(trimws(substr(line,77,89)))
INV_RATE[i]  <- as.numeric(trimws(substr(line,90,100)))
G_FEE_RT[i] <- as.numeric(trimws(substr(line,102,114)))
line <- doc[(i+2)]
MERS_NBR[i]    <-      as.character(as.numeric(substr(line,1,20)))
TELLER_NBR[i]   <- as.character(as.numeric(substr(line,23,29)))
PAID_TO_DATE[i]    <-   substr(line,35,45)
UNAPPLIED_BAL[i]   <- as.numeric(trimws(substr(line,46,57)))
UNCOLLECT_INT[i]  <-  as.numeric(trimws(substr(line,63,73)))
EXT_INT[i]   <- as.numeric(trimws(substr(line,77,89)))
YLD_DIFF[i]    <- as.numeric(trimws(substr(line,90,100)))
SRV_RATE[i]  <-  as.numeric(trimws(substr(line,102,150)))
line <- doc[(i+3)]
DEF_PRIN[i] <- as.numeric(trimws(substr(line,46,57)))
}
}
df <- data.frame(
ACCOUNT_NBR   ,
NEW_INV_BLK    ,
OLD_INV_BLK    ,
PRINCIPAL        ,
INTEREST     ,
SERVICE_FEE  ,
NOTE_RATE  ,
REMOVAL_AMT ,
NAMEKEY ,
INV_ACCT_NBR ,
PERC_TRANSFER  ,
PI_PAYMENT      ,
ESCROW_BAL     ,
BUYDOWN_BAL   ,
INV_RATE  ,
G_FEE_RT ,
MERS_NBR    ,
TELLER_NBR   ,
PAID_TO_DATE    ,
UNAPPLIED_BAL   ,
UNCOLLECT_INT  ,
EXT_INT   ,
YLD_DIFF    ,
SRV_RATE  ,
DEF_PRIN
)
df <- df[!is.na(df$ACCOUNT_NBR),]
saveExcel(
'Sheet1',
list(df),
paste0('//fs03/docs/Servicing/Parsing Scripts/0061003/0061003_Parse_',dat,'.xlsx')
)
}
}
View(df)
setwd("C:/Users/drew.howell/tidytuesday/data/2019/2019-11-05")
library(tidyverse)
library(readxl)
library(here)
library(glue)
library(janitor)
table_num <- 1:6
supp_read <- function(number, ...){
read_excel(here("2019", "2019-11-05", glue::glue("supplemental-table{number}.xlsx")), ...)
}
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
read_excel('C:/Users/drew.howell/tidytuesday/2019/2019-11-05/supplemental-table1.xlsx')
C:\Users\drew.howell\tidytuesday\data\2019\2019-11-05
supp_read <- function(number, ...){
read_excel(here('data',"2019", "2019-11-05", glue::glue("supplemental-table{number}.xlsx")), ...)
}
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
medium_bike <- supp_read(2, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_bike <- supp_read(3, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
full_bike <- bind_rows(small_bike, medium_bike, large_bike) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Bike")
View(full_bike)
small_walk <- supp_read(4, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small")
medium_walk <- supp_read(5, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_walk <- supp_read(6, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
full_walk <- bind_rows(small_walk, medium_walk, large_walk) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Walk")
# Built in state-level datasets
state_df <- tibble(
state = state.name,
state_abb = state.abb,
state_region = as.character(state.region)
)
full_commute <-
bind_rows(full_bike, full_walk) %>%
filter(!is.na(n),
# There are some government-related areas that don't align with cities
!str_detect(tolower(city), "government|goverment")) %>%
separate(city, into = c("city", "state"), sep = ", ") %>%
select(city, state, city_size, mode, everything()) %>%
left_join(state_df, by = c("state"))
full_commute %>%
write_csv(here("2019", "2019-11-05", "commute.csv"))
full_commute %>%
write_csv(here('data',"2019", "2019-11-05", "commute.csv"))
acs_data <- read_csv(here("2019", "2019-11-05", "table_3.csv"))
acs_data <- read_csv(here('data',"2019", "2019-11-05", "table_3.csv"))
age_data <- acs_data %>%
slice(1:6)
gender_data <- acs_data %>%
slice(9:10) %>%
rename("gender" = age)
race_data <- acs_data %>%
slice(13:18) %>%
rename("race" = age)
children_data <- acs_data %>%
slice(21:24) %>%
rename("children" = age)
income_data <- acs_data %>%
slice(27:36) %>%
rename("income" = age)
education_data <- acs_data %>%
slice(39:43) %>%
rename("education" = age)
View(gender_data)
View(income_data)
View(large_bike)
View(full_commute)
View(full_bike)
View(state_df)
getwd()
set_here('C:/Users/drew.howell/Desktop/CSC-201/2020_Fall/20200909_Transformation_GroupedSummaries')
knitr::opts_chunk$set(echo = TRUE)
# Load Packages -----------------------------------------------------------
library(tidyverse)
library(readxl)
library(here)
library(glue)
library(janitor)
# Read in Data ------------------------------------------------------------
table_num <- 1:6
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here('data',"2019", "2019-11-05", glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
medium_bike <- supp_read(2, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_bike <- supp_read(3, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
# Combine datasets
full_bike <- bind_rows(small_bike, medium_bike, large_bike) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Bike")
# 3 datasets for walking, each of which has a corresponding City Size
small_walk <- supp_read(4, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small")
medium_walk <- supp_read(5, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_walk <- supp_read(6, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
# Combine datasets
full_walk <- bind_rows(small_walk, medium_walk, large_walk) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Walk")
getwd()
setwd("C:/Users/drew.howell/Desktop/CSC-201/2020_Fall/20200909_Transformation_GroupedSummaries")
# Load Packages -----------------------------------------------------------
library(tidyverse)
library(readxl)
library(here)
library(glue)
library(janitor)
# Read in Data ------------------------------------------------------------
table_num <- 1:6
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here('data',"2019", "2019-11-05", glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
medium_bike <- supp_read(2, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_bike <- supp_read(3, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
# Combine datasets
full_bike <- bind_rows(small_bike, medium_bike, large_bike) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Bike")
# 3 datasets for walking, each of which has a corresponding City Size
small_walk <- supp_read(4, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small")
medium_walk <- supp_read(5, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Medium")
large_walk <- supp_read(6, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Large")
# Combine datasets
full_walk <- bind_rows(small_walk, medium_walk, large_walk) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Walk")
# Combine datasets
full_walk <- bind_rows(small_walk, medium_walk, large_walk) %>%
set_names(nm = c("city", "n", "percent", "moe", "city_size")) %>%
mutate(mode = "Walk")
View(full_bike)
library(stringr)
str_locate_all(',',full_bike$city)
str_locate_all(',',full_bike$city[1])
full_bike$city[1]
sapply(strsplit(full_bike$city, ","), "[", 2)
full_bike$state <- sapply(strsplit(full_bike$city, ", "), "[", 2)
full_bike <- full_bike[!is.na(full_bike$n),]
# Load Packages -----------------------------------------------------------
library(tidyverse)
library(readxl)
library(here)
library(glue)
library(janitor)
# Read in Data ------------------------------------------------------------
table_num <- 1:6
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here(glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
# Load Packages -----------------------------------------------------------
library(tidyverse)
library(readxl)
library(here)
library(glue)
library(janitor)
# Read in Data ------------------------------------------------------------
table_num <- 1:6
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here(glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here(glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
full_bike %>%
group_by(full_bike$state)
full_bike
full_bike$state
group_by(full_bike$state)
full_bike %>%
group_by(full_bike$state)
full_bike %>%
group_by(full_bike$state) %>%
summarise(
)
full_bike %>%
group_by(full_bike$state) %>%
summarise(
n = mean(full_bike$n)
perc = mean(full_bike$percent)
full_bike %>%
group_by(full_bike$state) %>%
summarise(
n = mean(full_bike$n),
perc = mean(full_bike$percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
count = n(n),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
count = n(),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
c_small = sum(size = 'Small')
count = n(),
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
c_small = sum(size = 'Small'),
count = n(),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
c_small = sum(city_size = 'Small'),
count = n(),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
c_small = sum(city_size == 'Small'),
count = n(),
perc = mean(percent)
)
full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
n_small = sum(city_size == 'Small'),
n_medium = sum(city_size == 'Medium'),
n_large = sum(city_size == 'Large'),
count = n(),
perc = mean(percent)
)
df <- full_bike %>%
group_by(state) %>%
summarise(
n = mean(n),
n_small = sum(city_size == 'Small'),
n_medium = sum(city_size == 'Medium'),
n_large = sum(city_size == 'Large'),
count = n(),
perc = mean(percent)
)
View(df)
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/Users/drew.howell/Desktop/CSC-201/2020_Fall/20200909_Transformation_GroupedSummaries")
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here(glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
# Generic read function for this dataset
supp_read <- function(number, ...){
read_excel(here(glue::glue("supplemental-table{number}.xlsx")), ...)
}
# 3 datasets for bikes, each of which has a corresponding City Size
small_bike <- supp_read(1, skip = 5) %>%
clean_names() %>%
mutate(city_size = "Small",
percentage_of_workers = as.numeric(percentage_of_workers),
margin_of_error_2 = as.numeric(margin_of_error_2))
