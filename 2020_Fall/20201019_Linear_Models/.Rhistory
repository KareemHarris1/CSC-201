#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision)) %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision') %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(x = 25, y = 0))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision)) %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision') %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(x = .25, y = 0))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision)) %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision') %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision), color = 'red') %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision', color = 'blue') %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision), color = 'red') %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision', color = rgb(214,92,92) %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
p
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision), color = 'red') %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision', color = rgb(214,92,92)) %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision), color = 'red') %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision', color = rgb(0.5,214,92,92)) %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision), color = 'red') %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision', color = rgb(.92,.35,.35)) %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
plot2d <- data.frame('DaysToDecision' = rep(1:31,2), 'Status' = c(rep('Decisioned',31),rep('Awaiting Decision',31)), 'Count' = 0)
plot2d$Count <- sum(df$DAYSTODECISION==plot2d$DaysToDecision & df$STATUS == plot2d$Status)
for (i in 1:nrow(plot2d)){
plot2d$Count[i] <- sum(df$DAYSTODECISION == plot2d$DaysToDecision[i] & df$STATUS == plot2d$Status[i])
}
plot1d <- data.frame('DaysToDecision' = rep(1:31), 'Decisioned' = 0, 'AwaitingDecision' = 0)
for (i in 1:nrow(plot1d)){
plot1d$Decisioned[i] <- sum(df$STATUS=='Decisioned'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
plot1d$AwaitingDecision[i] <- sum(df$STATUS=='Awaiting Decision'&df$DAYSTODECISION == plot1d$DaysToDecision[i])
}
# ggplot(plot2d, aes(fill = Status, y=Count, x=DaysToDecision)) +
#     geom_bar(width = 0.7, position = position_dodge(width=0.8), stat="identity") +
#     scale_x_continuous(breaks = c(1:31))+
#     theme_linedraw() +
#     theme(legend.position = 'top', aspect.ratio = 1/3)
p <- plot_ly(plot1d, x = ~DaysToDecision, y = ~Decisioned, type = 'bar', name = 'Decisioned', hoverinfo = 'text',
text = ~paste('</br> Days Left: ', DaysToDecision,
'</br> Decisioned: ', Decisioned,
'</br> Awaiting: ', AwaitingDecision)) %>%
add_trace(y = ~AwaitingDecision, name = 'Awaiting Decision') %>%
layout(title = ' Count by Days to Decision and Status', xaxis = list(
autotick = FALSE,
ticks = "outside",
tick0 = 1,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"), title = 'Days Left to Decide'
), yaxis = list(title = 'Count', dtick = 1), barmode = 'group', legend = list(orientation = 'h'))
p
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
#comments <- computeComments()
valueBox(noLoans, icon = "fa-comments")
library(shinydashboard)
install.packages('shinydashboard')
library(ggplot2)
library(DT)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(htmltools)
library(metricsgraphics)
library(plotly)
library(shinydashboard)
noLoans = 321
UPB = 34000
df <- read.csv('/Users/drewhowell/Desktop/TEST_WORK/30dd.csv')
show_plot <- function(plot_object, title) {
div(style="margin:auto;text-align:center", strong(title), br(), plot_object)
}
#comments <- computeComments()
valueBox(noLoans, icon = "fa-comments")
x <- data.frame('`Loans in Loss Mit`' = noLoans)
View(x)
x <- data.frame('LoansInLossMit`' = noLoans)
View(x)
knitr::kable(x)
x <- data.frame('LoansInLossMit`' = noLoans)
knitr::kable(x)
tuition_cost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
# Get the Data
library(readr)
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_income <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_income.csv')
salary_potential <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
historical_tuition <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
diversity_school <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/diversity_school.csv')
View(diversity_school)
diversity_school[diversity_school$name == 'Oral Roberts University',  ]
filter(diversity_school, total_enrollment < 10000)
library(dplyr)
filter(diversity_school, diversity_school$total_enrollment < 10000)
lessThan10k <- filter(diversity_school, diversity_school$total_enrollment < 10000)
View(lessThan10k)
lessThan10k <- diversity_school %>% filter(total_enrollment < 10000)
diversity_school %>%
filter(total_enrollment = 10000)
diversity_school %>%
filter(total_enrollment == 10000)
diversity_school %>%
filter(total_enrollment == 9999)
diversity_school %>%
filter(total_enrollment == 9999 & state == 'Iowa')
diversity_school %>%
filter(total_enrollment == 9999 & state == 'Texas')
diversity_school %>%
filter(total_enrollment == 9999 | state == 'Texas')
diversity_school %>%
filter(total_enrollment <= 9999 | total_enrollment > 5000)
diversity_school %>%
filter(total_enrollment <= 9999 & total_enrollment > 5000)
x <- diversity_school %>%
filter(total_enrollment <= 9999 & total_enrollment > 5000)
View(x)
otal_enrollment <= 9999
x <- diversity_school %>%
filter(total_enrollment <= 9999 & ! total_enrollment < 5000)
View(x)
diversity_school %>%
filter(state != 'Alabama')
y <- diversity_school %>%
filter(state != 'Alabama')
View(y)
diversity_school %>%
filter(name == 'Oral Roberts University')
library(ggplot2)
justORU <- diversity_school %>%
filter(name == 'Oral Roberts University')
View(justORU)
ggplot(data = diversity_school, aes(x = category, y = enrollment)) +
geom_point()
ggplot(data = justORU, aes(x = category, y = enrollment)) +
geom_point()
ggplot(data = justORU, aes(x = category, y = enrollment)) +
geom_point() +
coord_flip()
library(readr)
library(dplyr)
# reading in the tuition cost data from github using the code supplied on the README.md file
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
# reading in the salary potential data from github using the code supplied on the README.md file
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# we haven't covered joins in detail yet - but just know that this code is putting the two data sets together by the school name column. And because it's an inner join (instead of left, right, outer, etc.), it's dropping rows from either data set that do not appear in the other data set.
df <- inner_join(tuition_cost, salary_potential)
names(df)
library(readr)
library(dplyr)
# reading in the tuition cost data from github using the code supplied on the README.md file
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
# reading in the salary potential data from github using the code supplied on the README.md file
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# we haven't covered joins in detail yet - but just know that this code is putting the two data sets together by the school name column. And because it's an inner join (instead of left, right, outer, etc.), it's dropping rows from either data set that do not appear in the other data set.
df <- inner_join(tuition_cost, salary_potential)
sum(df$room_and_board)
sum(df$room_and_board, na.rm = TRUE)
summary(df)
View(df)
setwd('/Users/drewhowell/Desktop/CSC-201/2020_Fall/20201019_Linear_Models/')
education <- read_csv('education_county.csv')
library(readr)
setwd('/Users/drewhowell/Desktop/CSC-201/2020_Fall/20201019_Linear_Models/')
education <- read_csv('education_county.csv')
voted <- read_csv('voted_county.csv')
pops <- read_csv('populations_county.csv')
voted$ID <- paste(voted$county, voted$state_po)
voted <- voted[voted$year == max(voted$year),]
voted$version <- NULL
ids <- unique(voted$ID)
i=2820
for (i in 1:length(ids)){
temp <- voted[voted$ID == ids[i],]
if(!F %in% is.na(temp$candidatevotes)){
next
}
temp$spectrum <- (-as.numeric(na.omit((temp$candidatevotes[temp$party=='democrat']/temp$totalvotes[temp$party=='democrat'] *10))) +
as.numeric(na.omit((temp$candidatevotes[temp$party=='republican']/temp$totalvotes[temp$party=='republican'] *10))))[1]
x <- temp[temp$candidatevotes == max(temp$candidatevotes),]
if(i==1){
clean_voted <- x
} else {
clean_voted <- rbind(clean_voted, x)
}
}
education <- education[!is.na(education$`2003 Rural-urban Continuum Code`),]
education$ed_spectrum <- -(2*education$`Percent of adults with less than a high school diploma, 2014-18` +
education$`Percent of adults with a high school diploma only, 2014-18`) +
education$`Percent of adults completing some college or associate's degree, 2014-18` +
education$`Percent of adults with a bachelor's degree or higher, 2014-18`*2
library(dplyr)
education <- select(education, State, `Area name`, ed_spectrum)
education <- education[-1,]
education$`Area name` <- gsub(' County','', education$`Area name`)
education$ID <- paste(education$`Area name`, education$State)
education$State <- education$`Area name` <- NULL
df <- inner_join(clean_voted, education, by = c('ID' = 'ID'))
pops$CTYNAME <- gsub(' County','', pops$CTYNAME)
for(i in 1:nrow(pops)){
pops$STNAME[i] <- ifelse(length(state.abb[grep(pops$STNAME[i], state.name)])==0, NA, state.abb[grep(pops$STNAME[i], state.name)])
}
pops$ID <- paste(pops$CTYNAME, pops$STNAME)
pops <- select(pops, ID, POPESTIMATE2019)
pops <- pops[!duplicated(pops$ID),]
df <- inner_join(df, pops)
df$turnout <- df$totalvotes / df$POPESTIMATE2019
df <- df[df$turnout < 1,]
model <- lm(spectrum ~ turnout + ed_spectrum, df)
model_a <- lm(spectrum ~ turnout, df)
model_b <- lm(spectrum ~ ed_spectrum, df)
library(jtools)
summ(model)
normalize <- function(x){
return((x - min(x))/(max(x) - min(x)))
}
df$ed_spectrum <- normalize(df$ed_spectrum)
df$turnout <- normalize(df$turnout)
model <- lm(spectrum ~ turnout + ed_spectrum, df)
model_a <- lm(spectrum ~ turnout, df)
model_b <- lm(spectrum ~ ed_spectrum, df)
summ(model)
summ(model_a)
summ(model_b)
df$ed_percentile <- percent_rank(df$ed_spectrum)
df$ed_rank <- ifelse(df$ed_percentile < 0.25, 'Q1',
ifelse(df$ed_percentile >=0.25 & df$ed_percentile < 0.5, 'Q2',
ifelse(df$ed_percentile >=0.5 & df$ed_percentile < 0.75, 'Q3','Q4')))
View(df)
df$edRank_Q1 <- ifelse(df$ed_rank == 'Q1',1,0)
df$edRank_Q2 <- ifelse(df$ed_rank == 'Q2',1,0)
df$edRank_Q3 <- ifelse(df$ed_rank == 'Q3',1,0)
df$edRank_Q4 <- ifelse(df$ed_rank == 'Q4',1,0)
View(df)
model <- lm(spectrum ~
edRank_Q1 +
edRank_Q2 +
edRank_Q3 +
edRank_Q4
, df)
summ(model)
library(olsrr)
install.packages('olsrr')
library(olsrr)
install.packages('olsrr')
# install.packages('olsrr')
library(olsrr)
ols_coll_diag(model)
model <- lm(spectrum ~
# edRank_Q1 +
edRank_Q2 +
edRank_Q3 +
edRank_Q4
, df)
summ(model)
ols_coll_diag(model)
summ(model)
model <- lm(spectrum ~
edRank_Q1 +
# edRank_Q2 +
edRank_Q3 +
edRank_Q4
, df)
summ(model)
model <- lm(spectrum ~
edRank_Q1 +
edRank_Q2 +
edRank_Q3
# edRank_Q4
, df)
summ(model)
# 1 - Read in the data (already provided)
library(readr)
emissions <- read_csv('https://raw.githubusercontent.com/drehow/CSC-201/master/2020_Fall/Lab%203/emissions.csv')
stocks <- read_csv('https://raw.githubusercontent.com/drehow/CSC-201/master/2020_Fall/Lab%203/sp500.csv')
View(emissions)
View(stocks)
View(emissions)
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')
library(tidyverse)
#command/ promt used to view the coffee rating data set
View (coffee_ratings)
#view the coffee rating coutn species and sort it
coffee_ratings %>%
count(species, sort = TRUE)
#
coffee_lumped <- coffee_ratings %>%
filter(!is.na(variety),
total_cup_points > 10) %>%
mutate(variety = fct_lump(variety, 12), sort = TRUE)
coffee_lumped %>%
ggplot(aes(total_cup_points, fill = variety)) +
geom_boxplot()
coffee_ratings %>%
mutate(coffee_id = row_number()) %>%
select(coffee_id, total_cups_points, species, variety, owner, farm_name,
country_of_origin,)
